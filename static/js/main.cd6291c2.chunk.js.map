{"version":3,"sources":["contexts/GameContext.js","components/common/Button/Button.jsx","components/common/Styles/Styles.js","components/pages/Home.jsx","firebase.js","components/common/HighscoreTable/HighscoreTable.jsx","components/common/CategorySelect/CategorySelect.jsx","components/pages/Highscore.jsx","components/common/Counter/Counter.jsx","components/common/Option/Option.jsx","components/common/Options/Options.jsx","components/common/Question/Question.jsx","components/pages/Play.jsx","components/pages/Settings.jsx","components/common/Answer/Answer.jsx","components/common/UsernameInput/UsernameInput.jsx","components/pages/Stats.jsx","components/Router.jsx","App.js","reportWebVitals.js","index.js"],"names":["GameContext","createContext","Button","text","path","clickHandler","onClick","Main","styled","main","Home","history","useHistory","handleClick","push","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","HighscoreTable","arr","highscores","currentTab","highscoreByTab","Object","values","className","sort","a","b","score","map","element","index","username","div","CategorySelect","categories","changeCategory","onChange","name","id","value","selected","ul","Highscore","database","category","useContext","useState","setHighscores","setCurrentTab","setCategories","useEffect","fetch","then","res","json","data","trivia_categories","catch","err","console","error","ref","once","snapshot","val","e","selectedCategory","target","options","selectedIndex","Counter","setCounter","duration","handleSubmit","count","setCount","setInterval","prevState","Clock","props","Option","answer","type","htmlFor","dangerouslySetInnerHTML","__html","Options","questionData","currentQuestion","setOptions","incorrect_answers","randNum","Math","floor","random","length","splice","correct_answer","OptionsWrapper","rowLength","Question","question","Play","settings","questions","setQuestions","answers","setAnswers","setCurrentQuestion","counter","timesUp","document","querySelector","clearInterval","difficulty","results","to","timer","Settings","setSettings","setCategory","setTimer","Form","action","onSubmit","preventDefault","formData","FormData","currentTarget","entries","key","min","max","onInput","form","Answer","UsernameInput","setUsername","Stats","i","payload","Router","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd6291c2.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const GameContext = createContext();","import React from 'react';\nimport \"./style.css\";\n\nexport default function Button({text, path, clickHandler}) {\n  return (\n    <button onClick={() => clickHandler(path)}>{text}</button>\n  )\n}\n","import styled from \"styled-components\";\n\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 160px);\n  max-width: 500px;\n  padding: 80px 40px;\n  margin: 0 auto;\n\n  h1 {\n    color: #FC8E30;\n    font-size: 64px;\n    margin: 0 0 80px;\n  }\n\n  h2 {\n    color: black;\n    font-size: 48px;\n    margin: 0 0 80px;\n  }\n`;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '../common/Button/Button';\nimport { Main } from \"../common/Styles/Styles\";\n\nexport default function Home() {\n  const history = useHistory()\n  \n  const handleClick = (path) => {\n    history.push(`./${path}`)\n  }\n\n  return (\n    <Main>\n      <h1>Quizy</h1>\n      <Button text=\"Play\" path=\"settings\" clickHandler={handleClick}/>\n      {/* <Button text=\"Instructions\" path=\"instructions\" clickHandler={handleClick}/> */}\n      <Button text=\"Highscore\" path=\"highscore\" clickHandler={handleClick}/>\n    </Main>\n  )\n}","import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyABzrcEy1JtvKtaORtXo1cRAlMp4cZO33Q\",\n  authDomain: \"quizy-c6178.firebaseapp.com\",\n  databaseURL: \"https://quizy-c6178.firebaseio.com\",\n  projectId: \"quizy-c6178\",\n  storageBucket: \"quizy-c6178.appspot.com\",\n  messagingSenderId: \"108998361270\",\n  appId: \"1:108998361270:web:6ac40783b182bfe2d72617\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\nimport styled from 'styled-components';\nimport \"./style.css\";\n\nexport default function HighscoreTable({ highscores, currentTab }) {\n  const highscoreByTab = Object.values(highscores[currentTab]);\n\n  const orderByScore = (arr) => {\n    return arr.sort((a, b) => b.score - a.score);\n  };\n\n  return (\n    <table className=\"highscore-table\">\n      <thead>\n        <tr>\n          <th className=\"col\">Rank</th>\n          <th className=\"col\">User</th>\n          <th className=\"col\">Points</th>\n        </tr>\n      </thead>\n      <tbody>\n        {orderByScore(highscoreByTab).map((element, index) => \n          <tr key={index}>\n            <td className=\"col\">{index + 1}</td>\n            <td className=\"col\">{element.username}</td>\n            <td className=\"col\">{element.score}</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nconst Table = styled.div`\n  background-color: #BBB;\n`;","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.css\";\nexport default function CategorySelect({ categories, currentTab, changeCategory }) {\n  return (\n    <select className=\"category-select\" onChange={changeCategory} name=\"category\" id=\"category-select\">\n      <option value=\"\">Any</option>\n      {categories.map((element, index) => (\n        <option\n          selected={element.name === currentTab ? true : false}\n          key={index}\n          value={element.id}\n        >\n          {element.name}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nconst Ul = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  li {\n  }\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { GameContext } from \"../../contexts/GameContext.js\";\nimport firebase from \"../../firebase.js\";\nimport HighscoreTable from \"../common/HighscoreTable/HighscoreTable.jsx\";\nimport Tabs from \"../common/CategorySelect/CategorySelect.jsx\";\nimport { Main } from \"../common/Styles/Styles\";\nimport CategorySelect from \"../common/CategorySelect/CategorySelect.jsx\";\n\nexport default function Highscore() {\n  const database = firebase.database();\n  const { category } = useContext(GameContext);\n  const [highscores, setHighscores] = useState({});\n  const [currentTab, setCurrentTab] = useState(category);\n  const [categories, setCategories] = useState(null);\n\n  const changeCategory = (e) => {\n    const selectedCategory = e.target.options[e.target.selectedIndex];\n    setCurrentTab(selectedCategory.text);\n  }\n\n  useEffect(() => {\n    fetch(\"https://opentdb.com/api_category.php\")\n      .then((res) => res.json())\n      .then((data) => setCategories(data.trivia_categories))\n      .catch((err) => console.error(err));\n  }, []);\n\n  useEffect(() => {\n    database\n      .ref()\n      .once(\"value\")\n      .then((snapshot) => {\n        setHighscores(snapshot.val());\n      });\n  }, [setHighscores, database]);\n\n  return (\n    <Main>\n      <h2>Highscore</h2>\n      {categories && <CategorySelect categories={categories} currentTab={currentTab} changeCategory={changeCategory}/>}\n      {highscores[currentTab] ? <HighscoreTable highscores={highscores} currentTab={currentTab} /> : <i>Kategorin saknar resultat</i>}\n      {/* <Tabs highscores={highscores} setCurrentTab={setCurrentTab} /> */}\n    </Main>\n  );\n}\n\n// const Main = styled.main`\n//   .table-container {\n//     display: grid;\n//     grid-template: auto / repeat(2, max-content);\n//     width: min-content;\n//     margin: 0 auto;\n//   }\n// `;","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Counter ({setCounter, duration, handleSubmit}) {\r\n  const [count, setCount] = useState(duration);\r\n\r\n  const createInterval = () => setInterval(() => {\r\n    setCount(prevState => prevState - 1);\r\n  }, 1000)\r\n\r\n  useEffect(() => {\r\n    setCounter(createInterval());\r\n  }, [setCounter])\r\n  \r\n  useEffect(() => {\r\n    if (count === 0) {\r\n      handleSubmit(true);\r\n    }\r\n  }, [count, handleSubmit])\r\n\r\n  return (\r\n    <Clock duration={duration}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"spinner-wrapper\">\r\n          <div className=\"spinner pie\"></div>\r\n        </div>\r\n        <div className=\"filler pie\"></div>\r\n        <div className=\"mask\"></div>\r\n        <p>{count && count}</p>\r\n      </div>\r\n    </Clock>\r\n  )\r\n}\r\n\r\nconst Clock = styled.div`\r\n  display: inline-block;\r\n  margin-bottom: 80px;\r\n\r\n  .wrapper {\r\n    width: 250px;\r\n    height: 250px;\r\n    position: relative;\r\n    border-radius: 50%;\r\n    border: 10px solid black;\r\n    background-color: white;\r\n  }\r\n\r\n  .spinner-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    animation: rota ${props => props.duration}s linear;\r\n  }\r\n\r\n  .spinner {\r\n    top: 0;\r\n    left: 0;\r\n    border-radius: 125px 0 0 125px; \r\n    z-index: 200;\r\n    /* border-right: none; */\r\n  }\r\n\r\n  .filler {\r\n    top: 0;\r\n    right: 0;\r\n    border-radius: 0 125px 125px 0;\r\n    z-index: 100;\r\n    opacity: 0;\r\n    /* border-left: none; */\r\n    animation: fill ${props => props.duration}s steps(1, end);\r\n  }\r\n\r\n  .mask {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 50%;\r\n    z-index: 300;\r\n    opacity: 1;\r\n    background: white;\r\n    border-radius: 125px 0 0 125px;\r\n    animation: mask ${props => props.duration}s steps(1, end);\r\n  }\r\n\r\n  .pie {\r\n    width: 50%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background: #08C;\r\n    /* border: 10px solid rgba(0,0,0,0.4); */\r\n  }\r\n\r\n  p {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 64px;\r\n    font-weight: 500;\r\n    margin: 0;\r\n    z-index: 999;\r\n  }\r\n\r\n  @keyframes rota {\r\n    0%   { transform: rotate(0deg); }\r\n    100% { transform: rotate(-360deg); }\r\n  }\r\n\r\n  @keyframes fill {\r\n    0%        { opacity: 1; }\r\n    50%, 100% { opacity: 0; }\r\n  }\r\n\r\n  @keyframes mask {\r\n    0%        { opacity: 0; }\r\n    50%, 100% { opacity: 1; }\r\n  }\r\n`;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nexport default function Option({answer}) {\r\n  return (\r\n    <>\r\n      <input className=\"option-input\" type=\"radio\" name=\"answer\" value={answer}/>\r\n      <label className=\"option-label\" htmlFor={answer} dangerouslySetInnerHTML={{ __html: answer}}></label>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Option from \"../Option/Option\";\r\n\r\nexport default function Options({ questionData, currentQuestion }) {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOptions(() => {\r\n      if (questionData.type !== \"boolean\") {\r\n        const data = [...questionData.incorrect_answers];\r\n        const randNum = Math.floor(Math.random() * options.length + 1);\r\n        data.splice(randNum, 0, questionData.correct_answer);\r\n        return data;\r\n      } else {\r\n        return [\"True\", \"False\"];\r\n      }\r\n      \r\n    })\r\n  }, [questionData, options.length])\r\n\r\n  return (\r\n    <OptionsWrapper rowLength={options.length}>\r\n      {options &&\r\n        options.map((answer, index) => (\r\n          <Option answer={answer} key={`${currentQuestion}${index}`} />\r\n        ))}\r\n    </OptionsWrapper>\r\n  );\r\n}\r\n\r\nconst OptionsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template: repeat(${props => props.rowLength}, 1fr) / auto minmax(50px, auto);\r\n  width: max-content;\r\n  margin: 40px auto;\r\n  gap: 10px;\r\n`;","import React from \"react\";\r\nimport Options from \"../Options/Options\";\r\nimport \"./style.css\";\r\n\r\nexport default function Question({ questionData, currentQuestion }) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"question\" dangerouslySetInnerHTML={{ __html: questionData.question}}></h3>\r\n      <Options questionData={questionData} currentQuestion={currentQuestion} />\r\n    </div>\r\n  );\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport Counter from \"../common/Counter/Counter\";\r\nimport Question from \"../common/Question/Question\";\r\nimport { Main } from \"../common/Styles/Styles\";\r\n\r\nexport default function Play() {\r\n  const { settings, questions, setQuestions, answers, setAnswers } = useContext(\r\n    GameContext\r\n  );\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [counter, setCounter] = useState();\r\n\r\n  const handleSubmit = (timesUp = false) => {\r\n    const selected = document.querySelector(\"input[name=answer]:checked\");\r\n\r\n    if (selected || timesUp) {\r\n      const answer = selected ? selected.value : \"\";\r\n      setAnswers([...answers, answer]);\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      clearInterval(counter);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://opentdb.com/api.php?amount=10&difficulty=${settings.difficulty}&category=${settings.category}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setQuestions(data.results))\r\n      .catch((err) => console.error(err));\r\n  }, [settings, setQuestions]);\r\n\r\n  return (\r\n    <Main>\r\n      {questions && (\r\n        <div>\r\n          {currentQuestion === questions.length ? (\r\n            <Redirect to=\"./stats\" />\r\n          ) : (\r\n            <div>\r\n              <Counter\r\n                key={currentQuestion}\r\n                setCounter={setCounter}\r\n                duration={settings.timer}\r\n                handleSubmit={handleSubmit}\r\n              />\r\n              <Question\r\n                questionData={questions[currentQuestion]}\r\n                currentQuestion={currentQuestion}\r\n              />\r\n              <button onClick={() => handleSubmit()}>Submit</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Main>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { GameContext } from \"../../contexts/GameContext\";\r\nimport { Main } from \"../common/Styles/Styles\";\r\n\r\nexport default function Settings() {\r\n  const { setSettings, setCategory } = useContext(GameContext);\r\n  const history = useHistory();\r\n  const [categories, setCategories] = useState([]);\r\n  const [timer, setTimer] = useState(30);\r\n  const difficulties = [\r\n    { id: \"easy\", name: \"Baby\" },\r\n    { id: \"medium\", name: \"Kid\" },\r\n    { id: \"hard\", name: \"Adult\" },\r\n  ];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.currentTarget);\r\n    const data = {};\r\n\r\n    for (const [key, value] of formData.entries()) {\r\n      data[key] = value;\r\n    }\r\n\r\n    setSettings(data);\r\n    history.push(\"./play\");\r\n  };\r\n\r\n  const changeCategory = (e) => {\r\n    const selectedCategory = e.target.options[e.target.selectedIndex];\r\n    setCategory(selectedCategory.text);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://opentdb.com/api_category.php\")\r\n      .then((res) => res.json())\r\n      .then((data) => setCategories(data.trivia_categories))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <Main>\r\n      <Form action=\"./play\" onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"category-select\">Select Category :</label>\r\n          <select onChange={changeCategory} name=\"category\" id=\"category-select\">\r\n            <option value=\"\">Any</option>\r\n            {categories.map((category, index) => (\r\n              <option key={index} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <label htmlFor=\"difficulty-select\">Select Difficulty :</label>\r\n          <select name=\"difficulty\" id=\"difficulty-select\">\r\n            <option value=\"\">Any Difficulty</option>\r\n            {difficulties.map((difficulty, index) => (\r\n              <option key={index} value={difficulty.id}>\r\n                {difficulty.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <label htmlFor=\"timer\">Timer :</label>\r\n          <div className=\"range-wrapper\">\r\n            <input\r\n              type=\"range\"\r\n              id=\"timer\"\r\n              name=\"timer\"\r\n              min=\"10\"\r\n              max=\"50\"\r\n              value={timer}\r\n              onInput={(e) => setTimer(e.currentTarget.value)}\r\n            />\r\n            <span>{timer}sec</span>\r\n          </div>\r\n        </div>\r\n        <button>Start Game</button>\r\n      </Form>\r\n    </Main>\r\n  );\r\n}\r\n\r\nconst Form = styled.form`\r\n  .input-container {\r\n    display: grid;\r\n    grid-template: repeat(3, minmax(30px, 1fr)) / auto 1fr;\r\n    grid-gap: 1em;\r\n    margin-bottom: 80px;\r\n\r\n    label {\r\n      display: flex;\r\n      align-items: center;\r\n      text-align: left;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    select {\r\n      display: flex;\r\n      align-items: center;\r\n      font-family: 'Roboto';\r\n      border: 2px solid black;\r\n      padding: 0 4px;\r\n      border-radius: 10px;\r\n\r\n      &:active {\r\n        border-bottom: 0;\r\n        border-radius: 10px 10px 0 0;\r\n      }\r\n    }\r\n\r\n    .range-wrapper {\r\n      display: flex;\r\n      align-items: center;\r\n      \r\n      input {\r\n        flex-grow: 1;\r\n      }\r\n    }\r\n\r\n    input:focus, select:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  \r\n`;","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Answer({questionData, answer}) {\n  return (\n    <div className=\"question-vs-answer\">\n      <h3 dangerouslySetInnerHTML={{ __html: questionData.question}}></h3>\n      <p dangerouslySetInnerHTML={{ __html: `Your answer: ${answer}`}}></p>\n      <p dangerouslySetInnerHTML={{ __html: `Correct answer: ${questionData.correct_answer}`}}></p>\n    </div>\n  );\n}\n","import React from 'react';\nimport \"./style.css\";\n\nexport default function UsernameInput({username, setUsername}) {\n  return (\n    <div className=\"username-input-wrapper\">\n      <label className=\"user-label\">Username</label>\n      <input className=\"user-input\" value={username} onChange={(e) => { setUsername(e.currentTarget.value) }}/>\n    </div>\n  )\n}\n","import firebase from \"../../firebase.js\";\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { GameContext } from '../../contexts/GameContext';\r\nimport Answer from '../common/Answer/Answer';\r\nimport Button from \"../common/Button/Button.jsx\";\r\nimport { Main } from \"../common/Styles/Styles\";\r\nimport UsernameInput from \"../common/UsernameInput/UsernameInput.jsx\";\r\n\r\nexport default function Stats() {\r\n  const database = firebase.database();\r\n  const { answers, questions, category } = useContext(GameContext);\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(null);\r\n  let score = 0;\r\n\r\n  for (let i = 0; i < Math.min(answers.length, questions.length); i++) {\r\n    if (answers[i] === questions[i].correct_answer) {\r\n      score++;\r\n    }\r\n  }\r\n\r\n  const handlePublish = (path) => {\r\n    const payload = {\r\n      username: username,\r\n      score: score,\r\n    }\r\n    database.ref(category).push(payload);\r\n    history.push(`./${path}`);\r\n  }\r\n\r\n  const handleSkip = (path) => {\r\n    history.push(`./${path}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [])\r\n\r\n  return (\r\n    <Main>\r\n      <h2>Overview</h2>\r\n      {questions ? questions.map((question, index) => (\r\n        <Answer key={index} questionData={question} answer={answers[index]}/>\r\n      )) : <Redirect to=\"./settings\"/>}\r\n      <UsernameInput username={username} setUsername={setUsername}/>\r\n      <Button text=\"Publish\" path=\"highscore\" clickHandler={handlePublish}/>\r\n      <Button text=\"Skip\" path=\"highscore\" clickHandler={handleSkip}/>\r\n    </Main>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { GameContext } from \"../contexts/GameContext\";\r\nimport Home from \"./pages/Home\";\r\nimport Highscore from \"./pages/Highscore\";\r\nimport Play from \"./pages/Play\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Stats from \"./pages/Stats\";\r\n\r\nexport default function Router() {\r\n  const [category, setCategory] = useState(\"Any\");\r\n  const [questions, setQuestions] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [settings, setSettings] = useState({category: \"\", difficulty: \"\", timer: \"30\"});\r\n\r\n  return (\r\n    <div>\r\n      <GameContext.Provider value={{settings, setSettings, questions, setQuestions, answers, setAnswers, category, setCategory}}>\r\n        <Switch>\r\n          <Route path=\"./settings\">\r\n            <Settings/>\r\n          </Route>\r\n          <Route path=\"./play\">\r\n            <Play/>\r\n          </Route>\r\n          <Route path=\"./stats\">\r\n            <Stats/>\r\n          </Route>\r\n          <Route path=\"./highscore\">\r\n            <Highscore/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home/>\r\n          </Route>\r\n        </Switch>\r\n      </GameContext.Provider>\r\n    </div> \r\n  );\r\n}\r\n","import Router from \"./components/Router\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router/> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}